name: Build & Deploy TradingBot

on:
  push:
    branches: ["main"]
  workflow_dispatch:

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "21"

      - name: Cache Maven
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Build with Maven
        run: mvn -B -DskipTests package

      - name: Prepare artifact
        run: |
          set -e
          echo "Listing target folder contents:"
          ls -lah target
          ART=$(find target -type f -name "*.jar" | head -n 1)
          echo "FOUND_JAR=$ART"
          cp "$ART" tradingbot.jar
          ls -lah tradingbot.jar

      - name: Add known_hosts
        run: |
          mkdir -p ~/.ssh
          printf "%s\n" "${{ secrets.KNOWN_HOSTS }}" > ~/.ssh/known_hosts
          chmod 600 ~/.ssh/known_hosts

      - name: Setup SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Upload JAR to server
        env:
          HOST: ${{ secrets.HOST }}
          SSH_USER: ${{ secrets.SSH_USER }}
          TARGET_DIR: ${{ secrets.TARGET_DIR }}
        run: |
          set -euo pipefail
          TS=$(date +%Y%m%d%H%M%S)
          REMOTE_RELEASE_DIR="${TARGET_DIR}/releases/${TS}"

          ssh "${SSH_USER}@${HOST}" "mkdir -p \"$REMOTE_RELEASE_DIR\""

          scp -o StrictHostKeyChecking=yes tradingbot.jar "${SSH_USER}@${HOST}:${REMOTE_RELEASE_DIR}/tradingbot.jar"

          ssh "${SSH_USER}@${HOST}" "ln -sfn \"$REMOTE_RELEASE_DIR\" \"${TARGET_DIR}/current\" && cd \"${TARGET_DIR}/releases\" && ls -1t | tail -n +6 | xargs -r -I {} rm -rf \"{}\""

      - name: Restart & verify service
        run: |
          ssh "${{ secrets.SSH_USER }}@${{ secrets.HOST }}" '
            sudo /usr/bin/systemctl restart "'"${{ secrets.SERVICE_NAME }}"'" &&
            sleep 2 &&
            /usr/bin/systemctl is-active --quiet "'"${{ secrets.SERVICE_NAME }}"'" &&
            echo "Service is UP âœ…" ||
            (
              echo "Service failed, last logs:" &&
              sudo /usr/bin/journalctl -u "'"${{ secrets.SERVICE_NAME }}"'" -n 100 --no-pager &&
              exit 1
            )
          '
